# Ruby CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2.1

jobs:
  build_and_test:
    docker:
      - image: cimg/ruby:2.6.5-node
        environment:
          RAILS_ENV: test
          BUNDLE_PATH: ./vendor/bundle
          POSTGRES_DB: cafepedia_api_test
          DATABASE_USER: postgres
          DATABASE_PASSWORD: ""
          DATABASE_HOST: 127.0.0.1
          DATABASE_PORT: 5432
          TZ: Asia/Tokyo
      - image: circleci/postgres:11.5-alpine
    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - rails-bundle-v1-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - rails-bundle-v1-

      - run:
          name: pg gem の依存関係のインストール
          command: sudo apt-get update; sudo apt-get install libpq-dev

      - run:
          name: Bundler のインストール
          command: gem install bundler -v 1.17.3

      - run:
          name: gem の依存関係のインストール
          command: bundle check || bundle install

      - save_cache:
          paths:
            - ./vendor/bundle
          key: rails-bundle-v1-{{ checksum "Gemfile.lock" }}

      - restore_cache:
          keys:
            - rails-yarn-v1-{{ checksum "yarn.lock" }}
            - rails-yarn-v1-

      - run:
          name: node_modules の依存関係のインストール
          command: yarn install

      - save_cache:
          paths:
            - ~/.cache/yarn
          key: rails-yarn-v1-{{ checksum "yarn.lock" }}

      - run:
          name: データベースの起動を待機
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: データベースのセットアップ
          command: bundle exec rails db:create db:schema:load --trace

      # run tests!
      - run:
          name: run tests
          command: |
            bundle exec rspec --format documentation --force-color --backtrace

      # run rubocop!
      - run:
          name: run rubocop
          command: |
            bundle exec rubocop --extra-details --display-style-guide --parallel --display-cop-names

      # BrakeMan
      - run:
          name: run brakeman
          command: |
            bundle exec brakeman -A

  deploy-staging:
    docker:
      - image: circleci/ruby:2.6.5-buster
        environment:
          RAILS_ENV: staging
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Deploy to Heroku Staging
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME_STAGE.git develop:master

  deploy-production:
    docker:
      - image: circleci/ruby:2.6.5-buster
        environment:
          RAILS_ENV: production
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Deploy to Heroku Production
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2
  main:
    jobs:
      - build_and_test
      - deploy-staging:
          requires:
            - build_and_test
          filters:
            branches:
              only: develop
      - deploy-production:
          requires:
            - build_and_test
          filters:
            branches:
              only: master
