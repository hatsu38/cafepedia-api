# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  test:
    docker:
      - image: circleci/ruby:2.6.5-buster
        environment:
          RAILS_ENV: test
          POSTGRES_DB: cafepedia_api_test
          DATABASE_USER: postgres
          DATABASE_PASSWORD: ""
          DATABASE_HOST: 127.0.0.1
          DATABASE_PORT: 5432
          TZ: Asia/Tokyo
      - image: circleci/postgres:11.5
    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: gem install bundler -v 2.0.2

      - run:
          name: install dependencies
          command: |
            bundle install

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: RAILS_ENV=test bundle exec rails db:create
      - run: RAILS_ENV=test bundle exec rails db:schema:load

      # run tests!
      - run:
          name: run tests
          command: |
            bundle exec rspec

      # run rubocop!
      - run:
          name: run rubocop
          command: |
            bundle exec rubocop --extra-details --display-style-guide --parallel --display-cop-names

      - run:
          name: run rubocop-thread_safety
          command: |
            bundle exec rubocop -r rubocop-thread_safety --only ThreadSafety,Style/GlobalVars,Style/ClassVars,Style/MutableConstant --display-cop-names --extra-details --display-style-guide
      # BrakeMan
      - run:
          name: run brakeman
          command: |
            bundle exec brakeman -A
  build:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: docker-compose build
          command: docker-compose build
      - run:
          name: docker-compose up
          command: docker-compose up -d
      - run:
          name: sleep for waiting launch db
          command: sleep 1
      - run:
          name: "before_test: setup db"
          command: docker-compose run app bundle exec rails db:create db:migrate
      - run:
          name: rspec
          command: docker-compose run app bundle exec rspec
      - run:
          name: rubocop
          command: docker-compose run app bundle exec rubocop --extra-details --display-style-guide --parallel --display-cop-names
      - run:
          name: rubocop-thread_safety
          command: docker-compose run app bundle exec rubocop -r rubocop-thread_safety --only ThreadSafety,Style/GlobalVars,Style/ClassVars,Style/MutableConstant --display-cop-names --extra-details --display-style-guide
      - run:
          name: brakeman
          command: docker-compose run app bundle exec brakeman -A
      - run:
          name: docker-compose down
          command: docker-compose down
workflows:
  version: 2
  build:
    jobs:
      - test
      - build